# Generated by Django 4.2.1 on 2023-05-30 14:47

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='agency_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aname', models.CharField(max_length=255)),
                ('aemail', models.EmailField(max_length=70)),
                ('aphone', models.CharField(max_length=10)),
                ('aaddress', models.TextField()),
                ('astate', models.CharField(max_length=50)),
                ('apincode', models.PositiveSmallIntegerField()),
                ('mzerotofive', models.PositiveSmallIntegerField()),
                ('mfivetoten', models.PositiveSmallIntegerField()),
                ('mtentofifteen', models.PositiveSmallIntegerField()),
                ('mabovefifteen', models.PositiveSmallIntegerField()),
                ('fzerotofive', models.PositiveSmallIntegerField()),
                ('ffivetoten', models.PositiveSmallIntegerField()),
                ('ftentofifteen', models.PositiveSmallIntegerField()),
                ('fabovefifteen', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='user_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mfname', models.CharField(max_length=50)),
                ('mmname', models.CharField(max_length=50)),
                ('mlname', models.CharField(max_length=50)),
                ('mdob', models.DateField(max_length=11)),
                ('mnationality', models.CharField(max_length=30)),
                ('moccupation', models.CharField(max_length=30)),
                ('mincome', models.PositiveBigIntegerField()),
                ('mwork', models.TextField()),
                ('mstate', models.CharField(max_length=50)),
                ('ffname', models.CharField(max_length=50)),
                ('fmname', models.CharField(max_length=50)),
                ('flname', models.CharField(max_length=50)),
                ('fdob', models.DateField(max_length=10)),
                ('fnationality', models.CharField(max_length=30)),
                ('foccupation', models.CharField(max_length=30)),
                ('fincome', models.PositiveBigIntegerField()),
                ('fwork', models.TextField()),
                ('fstate', models.CharField(max_length=50)),
                ('bchild', models.PositiveSmallIntegerField()),
                ('achild', models.PositiveSmallIntegerField()),
                ('uaddress', models.TextField()),
                ('upincode', models.PositiveSmallIntegerField()),
                ('uemail', models.EmailField(max_length=70, null=True)),
                ('uphone', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
